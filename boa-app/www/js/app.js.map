{"version":3,"sources":["app.js","controllers/AppCtrl.js","controllers/ArtistCtrl.js","controllers/CreateCtrl.js","controllers/HomeCtrl.js","controllers/PrivateCtrl.js","controllers/PublicCtrl.js","directives/imgCache.js","services/ArtistService.js","services/AuthenticationService.js","services/LocationService.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnEA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClfile":"app.js","sourcesContent":["var app = angular.module('starter', [\r\n    'ionic',\r\n    'ngCordova',\r\n    'ngResource'\r\n]);\r\n\r\napp.run(function($ionicPlatform, $rootScope) {\r\n    $ionicPlatform.ready(function() {\r\n        // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard\r\n        // for form inputs)\r\n        if(window.cordova && window.cordova.plugins.Keyboard) {\r\n            cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\r\n        }\r\n        if(window.StatusBar) {\r\n            StatusBar.styleDefault();\r\n        }\r\n\r\n        //set up and init image caching\r\n        // write log to console\r\n        ImgCache.options.debug = true;\r\n\r\n        // increase allocated space on Chrome to 50MB, default was 10MB\r\n        ImgCache.options.chromeQuota = 50*1024*1024;\r\n        ImgCache.init(function(){\r\n          //small hack to dispatch an event when imgCache is \r\n          //full initialized.\r\n          $rootScope.$broadcast('ImgCacheReady');\r\n        }, function(){\r\n            alert('ImgCache init: error! Check the log for errors');\r\n        });\r\n\r\n    });\r\n});\r\n\r\napp.config(function ($stateProvider, $urlRouterProvider) {\r\n    $stateProvider\r\n    .state('home', {\r\n        url: '/',\r\n        templateUrl: 'templates/home.html',\r\n        controller: 'HomeCtrl'\r\n    })\r\n\r\n    .state('private', {\r\n        url: '/private',\r\n        templateUrl: 'templates/private.html',\r\n        controller: 'PrivateCtrl'\r\n    })\r\n    .state('create', {\r\n        url: '/private/create',\r\n        templateUrl: 'templates/private/create.html',\r\n        controller: 'CreateCtrl'\r\n    })\r\n\r\n    .state('public', {\r\n        url: '/public',\r\n        templateUrl: 'templates/public.html',\r\n        controller: 'PublicCtrl'\r\n    })\r\n    .state('host',{\r\n        url:'/artist/:id',\r\n        controller:'ArtistCtrl',\r\n        templateUrl:'templates/artist.html',\r\n    });\r\n\r\n    $urlRouterProvider.otherwise('/');\r\n});\r\n\r\n","app.controller('AppCtrl', function ($scope) {\r\n\r\n\r\n});","app.controller('ArtistCtrl', function ($scope, $stateParams, ArtistService) {\r\n\r\n\t// ArtistService.getArtist('1').then(function(data){\r\n\t// \t$scope.artist = data;\r\n\t// });\r\n\r\n\t// $scope.artist = ArtistService.get().get(1);\r\n\r\n\t$scope.artist = ArtistService.get().get({user: $stateParams.id});\r\n\r\n\r\n\t// Add to favorites\r\n\t// $scope.addToFavorites = ArtistService.addToFavorites($stateParams.id);\r\n});","app.controller('CreateCtrl', function ($scope, $ionicPopup) {\r\n\r\n\t$scope.addMedia = function() {\r\n\r\n\t\t// popup\r\n\t\tvar popup = $ionicPopup.show({\r\n    \t\ttitle: 'Choose source',\r\n    \t\tsubTitle: 'Select the source of the content you want to upload',\r\n    \t\tbuttons: [\r\n      \t\t\t{ text: '<i class=\"icon ion-close\"></i>' },\r\n      \t\t\t{ text: '<i class=\"icon ion-earth\"></i>' },\r\n      \t\t\t{ text: '<i class=\"icon ion-images\"></i>'}\r\n    \t\t]\r\n  \t\t});\r\n  \t\tpopup.then(function(res) {\r\n    \t\tconsole.log('Tapped!', res);\r\n  \t\t});\r\n\r\n \t};\r\n\r\n});","app.controller('HomeCtrl', function ($scope, LocationService) {\r\n\r\n\t$scope.getLocation = function() {\r\n\t\tLocationService.getPosition().then(function(data){\r\n\t\t\t$scope.location = data;\r\n\t\t});\r\n\t};\r\n\r\n});","app.controller('PrivateCtrl', function ($scope) {\r\n\r\n\r\n});","app.controller('PublicCtrl', function ($scope, $http, ArtistService) {\r\n\r\n\t// ArtistService.getAllArtists().then(function(data){\r\n\t// \t$scope.artists = data;\r\n\t// });\r\n\r\n\t// ArtistService.getArtist('1').then(function(data){\r\n\t// \t$scope.artist = data;\r\n\t// });\r\n\r\n\r\n\t$scope.artists = ArtistService.get().query();\r\n});","app.directive('imgCache', function ($document) {\r\n    return {\r\n        link: function (scope, ele, attrs) {\r\n            var target = (ele);\r\n            //waits for the event to be triggered,\r\n            //before executing d call back\r\n            scope.$on('ImgCacheReady', function () {\r\n                //this checks if we have a cached copy.\r\n                ImgCache.isCached(attrs.src, function(path, success){\r\n                    if(success){\r\n                        // already cached\r\n                        ImgCache.useCachedFile(target);\r\n                    } else {\r\n                        // not there, need to cache the image\r\n                        ImgCache.cacheFile(attrs.src, function(){\r\n                            ImgCache.useCachedFile(target);\r\n                        });\r\n                    }\r\n                });\r\n            }, false);\r\n        }\r\n    };\r\n}); ","app.service('ArtistService', function ($q, $http, $resource) {\r\n\r\n    var ArtistService = this;\r\n\r\n    var artists = null;\r\n\r\n    var id;\r\n\r\n    ArtistService.getArtist = function(id) {\r\n        var defer = $q.defer();\r\n\r\n        console.log(id);\r\n\r\n        ArtistService.getAllArtists().then(function(data){\r\n            for (var i =  0; i <= artists.length; i++) {\r\n\r\n                // console.log(artists[i]._id);\r\n                id = artists[i].index;\r\n\r\n                if (id === parseInt(id)) {\r\n\r\n                    defer.resolve(artists[i]);\r\n\r\n                } else {\r\n\r\n                    defer.reject('Failed to receive artist');\r\n\r\n                }\r\n            }\r\n        }, function(err){\r\n            defer.reject('Failed to receive artists.json');\r\n        });\r\n\r\n        return defer.promise;\r\n    };\r\n\r\n    ArtistService.get = function(){\r\n        return $resource('http://jsonplaceholder.typicode.com/users/:user', {user: '@user'});\r\n    };\r\n\r\n    ArtistService.getAllArtists = function() {\r\n        var defer = $q.defer();\r\n\r\n        if( artists === null || refresh ) {\r\n\r\n            $http.get('http://localhost:8100/data/artists.json')\r\n            .success(function(data, status, headers, config){\r\n                console.log('Received artists.json');\r\n            })\r\n            .error(function(data, status, headers, config){\r\n                defer.reject('Failed to receive artists.json');\r\n            })\r\n            .then(function(result){\r\n                artists = result.data;\r\n                defer.resolve(artists);\r\n            });\r\n\r\n        } else {\r\n            deferred.resolve(artists);\r\n        }\r\n\r\n        return defer.promise;\r\n    };\r\n\r\n    return ArtistService;\r\n\r\n});","app.service('AuthService', function ($q, $http, $cordovaOauth) {\r\n\r\n    var AuthService = this;\r\n\r\n    var LOCAL_TOKEN_KEY = 'yourTokenKey';\r\n    var username = '';\r\n    var isAuthenticated = false;\r\n    var role = '';\r\n    var authToken;\r\n    var facebook;\r\n \r\n    function loadUserCredentials() {\r\n        var token = window.localStorage.getItem(LOCAL_TOKEN_KEY);\r\n        \r\n        if (token) {\r\n            useCredentials(token);\r\n        }\r\n    }\r\n \r\n    function storeUserCredentials(token) {\r\n        window.localStorage.setItem(LOCAL_TOKEN_KEY, token);\r\n        useCredentials(token);\r\n    }\r\n \r\n    function useCredentials(token) {\r\n        username = token.split('.')[0];\r\n        isAuthenticated = true;\r\n        authToken = token;\r\n \r\n        // if (username == 'admin') {\r\n        //     role = USER_ROLES.admin;\r\n        // }\r\n        // if (username == 'user') {\r\n        //     role = USER_ROLES.public;\r\n        // } else {\r\n        //     role = USER_ROLES.public;\r\n        // }\r\n \r\n        // Set the token as header for your requests!\r\n        $http.defaults.headers.common['X-Auth-Token'] = token;\r\n    }\r\n \r\n    function destroyUserCredentials() {\r\n        authToken = undefined;\r\n        username = '';\r\n        isAuthenticated = false;\r\n        $http.defaults.headers.common['X-Auth-Token'] = undefined;\r\n        window.localStorage.removeItem(LOCAL_TOKEN_KEY);\r\n    }\r\n\r\n    AuthService.login = function(oauth, name, pw) {\r\n        var defer = $q.defer();\r\n\r\n        if(oauth) {\r\n            console.log('Facebook login');\r\n\r\n            $cordovaOauth.facebook('902314686547924', ['email', 'id']).then(function(result){\r\n\r\n                storeUserCredentials(result.access_token);\r\n                facebook = true;\r\n                defer.resolve('Login success');\r\n\r\n            }, function(err) {\r\n                defer.reject('Login Failed');\r\n            });\r\n        } else {\r\n            console.log('Regular login');\r\n\r\n            if ((name == 'admin' && pw == '1') || (name == 'user' && pw == '1')) {\r\n\r\n                // Make a request and receive your auth token from your server\r\n                storeUserCredentials(name + '.yourServerToken');\r\n                facebook = false;\r\n                defer.resolve('Login success.');\r\n\r\n            } else {\r\n                defer.reject('Login Failed.');\r\n            }\r\n        }\r\n\r\n        return defer.promise;\r\n    };\r\n\r\n    AuthService.getProfile = function() {\r\n        var defer = $q.defer();\r\n\r\n        if(facebook) {\r\n            $http.get('https://graph.facebook.com/v2.2/me', { \r\n                    params: { \r\n                        access_token: window.localStorage.getItem(LOCAL_TOKEN_KEY),\r\n                        fields: \"id,name,gender,location,website,picture,relationship_status\", \r\n                        format: \"json\" \r\n                    }\r\n            }).success(function(response) {\r\n\r\n                defer.resolve(response);\r\n\r\n            }).error(function(err, status){\r\n\r\n                console.log(\"Something went wrong\", err, status);\r\n                defer.reject(err);\r\n\r\n            });\r\n        } else {\r\n            alert('Not logged in with Facebook');\r\n        }\r\n\r\n        return defer.promise;\r\n    };\r\n\r\n    AuthService.isFacebook = function() {\r\n        return facebook;\r\n    };\r\n \r\n    AuthService.logout = function() {\r\n        destroyUserCredentials();\r\n    };\r\n \r\n    AuthService.isAuthorized = function(authorizedRoles) {\r\n        if (!angular.isArray(authorizedRoles)) {\r\n            authorizedRoles = [authorizedRoles];\r\n        }\r\n        return (isAuthenticated && authorizedRoles.indexOf(role) !== -1);\r\n    };\r\n\r\n    AuthService.isAuthenticated = function() {\r\n        return isAuthenticated;\r\n    };\r\n\r\n    AuthService.username = function() {\r\n        return username;\r\n    };\r\n\r\n    AuthService.role = function() {\r\n        return role;\r\n    };\r\n \r\n    loadUserCredentials();\r\n \r\n    return AuthService;\r\n});\r\n\r\napp.factory('AuthInterceptor', function ($rootScope, $q) {\r\n\r\n    return {\r\n        responseError: function (response) {\r\n            $rootScope.$broadcast({\r\n                //401: AUTH_EVENTS.notAuthenticated,\r\n                //403: AUTH_EVENTS.notAuthorized\r\n            }[response.status], response);\r\n            return $q.reject(response);\r\n        }\r\n    };\r\n\r\n});\r\n \r\napp.config(function ($httpProvider) {\r\n    $httpProvider.interceptors.push('AuthInterceptor');\r\n});","app.factory('LocationService', function ($q){\r\n\r\n    var location = null;\r\n\r\n    var getPosition = function(refresh) {\r\n        \r\n        var deferred = $q.defer();\r\n        \r\n        if( location === null || refresh ) {\r\n        \r\n            navigator.geolocation.getCurrentPosition(function(position) {\r\n                var lat = position.coords.latitude;\r\n                var long = position.coords.latitude;\r\n\r\n                location = { 'lat' : lat, 'long' : long };\r\n\r\n                deferred.resolve(location);\r\n\r\n            }, function(error) {\r\n                console.log('Got error!', error);\r\n                location = null;\r\n                \r\n                deferred.reject('Failed to get Latitude and Longitude');\r\n            });\r\n            \r\n        } else {\r\n            deferred.resolve(location);\r\n        }\r\n        \r\n        return deferred.promise;\r\n\r\n    };      \r\n    \r\n    return {\r\n        getPosition : getPosition\r\n    };\r\n});"],"sourceRoot":"/source/"}